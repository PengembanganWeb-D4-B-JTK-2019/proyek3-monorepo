version: "3.9"
services:
  service-absensi:
    build: ./service-absensi
    volumes:
    - .:/usr/src
    depends_on:
    - postgres
  service-monitoring:
    build: ./service-monitoring
    volumes:
    - .:/usr/src
    depends_on:
    - postgres
  service-penilaian:
    build: ./service-penilaian
    volumes:
    - .:/usr/src
    depends_on:
    - postgres
  service-logbook:
    build: ./service-logbook
    volumes:
    - .:/usr/src
    depends_on:
    - mongo
    - postgres
  frontend:
    build: ./frontend
    volumes:
    - .:/usr/src
  nginx:
    image: nginx:1-alpine
    ports:
    - "8080:80"
    volumes:
    - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./nginx/etc/nginx/proxy.conf:/etc/nginx/proxy.conf:ro
    - ./nginx/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
    environment:
    - NGINX_PORT=80
    command: [nginx-debug, '-g', 'daemon off;']
  postgres:
    image: postgres:14-alpine
    restart: always
    volumes:
    - ./.tmp/var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: proyek3
      POSTGRES_PASSWORD: proyek3
      POSTGRES_DB: proyek3
  adminer:
    image: michalhosna/adminer
    restart: always
    environment:
      ADMINER_DB: proyek3
      ADMINER_DRIVER: pgsql
      ADMINER_PASSWORD: proyek3
      ADMINER_SERVER: postgres
      ADMINER_USERNAME: proyek3
      ADMINER_AUTOLOGIN: 1
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: proyek3
      MONGO_INITDB_ROOT_PASSWORD: proyek3
    volumes:
    - ./.tmp/etc/mongo:/etc/mongo
  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: proyek3
      ME_CONFIG_MONGODB_ADMINPASSWORD: proyek3
    restart: unless-stopped
